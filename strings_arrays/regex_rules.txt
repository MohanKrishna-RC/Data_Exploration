[abc] - a,b or c
[^abc] - anything except a,b,c
[a-z] - a to z
[^a-z] - anything other than a-z
[A-Z] - A to Z
[a-zA-Z] -- a to z, A to Z
[0-9] -- 0 to 9
a(b|c)     matches a string that has a followed by b or c (and captures b or c) -> Try it!
a[bc]      same as previous, but without capturing b or c


#Quantifiers

[ ]? -- Occurs 0 or 1 time
[ ]+ -- Occurs 1 or more times
[ ]* -- Occurs 0 or more times
[ ]{n} -- Occurs n times
[ ]{n,} -- Occurs n or more times
[ ]{y,z} -- Occurs atleast y times,but less than z times

#Regex metacharacters

\d  [0-9]
\D  [^0-9]
\w  [a-zA-Z_0-9]
\W  [^\w]
\s matches whitespace ( includes tabs and line breaks)
. matches any character

We can also match non-printable characters like tabs(\t), new lines (\n), carriage returns (\r)

Bracket expressions

[abc]            matches a string that has either an a or a b or a c -> is the same as a|b|c
[a-c]            same as previous
[a-fA-F0-9]      a string that represents a single hexadecimal digit, case insensitively
[0-9]%           a string that has a character from 0 to 9 before a % sign
[^a-zA-Z]        a string that has not a letter from a to z or from A to Z. In this case the ^ is used as negation of the expression

